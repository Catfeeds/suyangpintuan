<?php/** 短信接口类 * Class Sms_Library */class Sms_Library extends Lowxp_Model {	/** 根据模板发送短信	 * @param $mobile	 * @param $template_code	 * @param $type 1返回短信内容	 * @param $content 发送内容	 * @param array $assignTpl	 */	function sendSmsTpl($mobile, $template_code, $type = 0, $content = '') {		if (empty($template_code) || empty($mobile)) {			return false;		}		global $lowxp;		$sql = "SELECT template_content,status,send_number FROM ###_templates WHERE `type`='sms' AND `status`='1' AND template_code = '$template_code'";		if ($row = $this->db->get($sql)) {			#模板付值			$assignTpl = $lowxp->smarty->get_template_vars();			$smarty = smartyTpl();			if (is_array($assignTpl) && !empty($assignTpl)) {				foreach ($assignTpl as $k => $v) {					$smarty->assign($k, $v);				}			}			#获取模板解析内容			$content = $content ? $content : $smarty->fetch(MERID."/".$template_code . '.html');			unset($smarty);			if ($type == 1) {return $content;}			$msg = $this->sendSms($mobile, $content);			if ($msg === true) {				#发送记录				$data = array(					'last_send'   => time(),					'send_number' => intval($row['send_number']) + 1,				);				$this->db->save('###_templates', $data, '', array('template_code' => $template_code));				$data = array(					'mobile'    => $mobile,					'content'   => $content,					'send_time' => time(),					'tpl'       => $template_code,				);				$this->db->save('###_sms', $data);				return true;			} else {				return $msg; #提示信息			}		}		return false;	}	/** 发送短信 基础函数	 * @param $mobile	 * @param $content	 * @param array $cfg	 */	function sendSms($mobile, $content, $cfg = array()) {		$config = $this->setting->value("'sms_open','sms_type','sms_username','sms_password','site_name','sms_mod'");		if (!$config['sms_open']) {			return false;		}		if ($cfg && is_array($cfg)) {			$config = $cfg;		}		#文件日志		$this->load->library('dir');		$log = date('Y-m-d H:i:s') . " | " . getIP() . " | " . $mobile . " | " . $content . "\r\n";		$this->dir->filePutContents(RUNTIME_PATH . "sms_log_" . $config['sms_username'] . ".log", $log, 'ab+');		/******上海互亿*****/		if ($config['sms_type'] == 1) {			$target = "http://106.ihuyi.cn/webservice/sms.php?method=Submit";			//替换成自己的测试账号,参数顺序和wenservice对应			$post_data = "account=" . $config['sms_username'] . "&password=" . md5($config['sms_password']) . "&md5=1&mobile=" . $mobile . "&content=" . urlencode($content);			$gets = '<?xml version="1.0" encoding="utf-8"?>                    <SubmitResult xmlns="http://106.ihuyi.cn/">                    <code>0</code>                    <msg>调试成功</msg>                    </SubmitResult>';			if ($config['sms_mod'] == 0) {				$gets = $this->curlPost($post_data, $target);			}			$gets_arr = $this->xmlToArray($gets);			//$this->dir->filePutContents(RUNTIME_PATH."sms_log_".$config['sms_username'].".log",'发送状态：'.$gets_arr['SubmitResult']['msg']."\r\n",'ab+');			if ($gets_arr['SubmitResult']['code'] == 2 || 1 == $config['sms_mod']) {				return true;			} else {				return $gets_arr['SubmitResult']['msg'];			}		}		/******上海互亿 end*****/		else {			#TODO:其它接口扩展			return false;		}	}	/** 生成短信随机验证码	 * @return string	 */	function getVerifyCode() {		$length = 6;		PHP_VERSION < '4.2.0' && mt_srand((double) microtime() * 1000000);		$hash = sprintf('%0' . $length . 'd', mt_rand(0, pow(10, $length) - 1));		return $hash;	}	/** 远程连接	 * @param $curlPost	 * @param $url	 * @return mixed	 */	function curlPost($curlPost, $url) {		//set_time_limit(60);		$curl = curl_init();		curl_setopt($curl, CURLOPT_URL, $url);		curl_setopt($curl, CURLOPT_HEADER, false);		curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);		curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 60);		curl_setopt($curl, CURLOPT_TIMEOUT, 60);		curl_setopt($curl, CURLOPT_NOBODY, true);		curl_setopt($curl, CURLOPT_POST, true);		curl_setopt($curl, CURLOPT_POSTFIELDS, $curlPost);		$return_str = curl_exec($curl);		curl_close($curl);		return $return_str;	}	/** 简单解析xml	 * @param $xml	 * @return mixed	 */	function xmlToArray($xml) {		$reg = "/<(\w+)[^>]*>([\\x00-\\xFF]*)<\\/\\1>/";		$arr = array();		if (preg_match_all($reg, $xml, $matches)) {			$count = count($matches[0]);			for ($i = 0; $i < $count; $i++) {				$subxml = $matches[2][$i];				$key = $matches[1][$i];				if (preg_match($reg, $subxml)) {					$arr[$key] = $this->xmlToArray($subxml);				} else {					$arr[$key] = $subxml;				}			}		}		return @$arr;	}}