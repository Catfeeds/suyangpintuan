<?php/** * ZZCMS 站点配置 * ============================================================================ * * 版权所有 2014-2016 厦门紫竹数码科技有限公司，并保留所有权利。 * 网站地址: http://www.lnest.com； * ---------------------------------------------------------------------------- * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和 * 使用；不允许对程序代码以任何形式任何目的的再发布。 */class setting extends Lowxp {	function __construct() {		#按钮		$this->btnMenu = array(			'index'    => array('url' => '#!setting/index', 'name' => '站点配置'),			'system'   => array('url' => '#!setting/index/system', 'name' => '系统参数'),			'mail'     => array('url' => '#!setting/index/mail', 'name' => '邮箱配置'),			'sms'      => array('url' => '#!setting/index/sms', 'name' => '短信接口'),			'oauth'    => array('url' => '#!setting/index/oauth', 'name' => '第三方登录'),			// 'iface'  => array('url' => '#!setting/index/iface', 'name' => '其它接口'),			'wechat'   => array('url' => '#!setting/index/wechat', 'name' => '微信配置'),			'goods'    => array('url' => '#!setting/index/goods', 'name' => '商品配置'),			//'agent' => array('url' => '#!setting/index/agent', 'name' => '分销配置'),			'contact'  => array('url' => '#!setting/index/contact', 'name' => '联系方式'),			'attach'   => array('url' => '#!setting/index/attach', 'name' => '附件配置'),			'images'   => array('url' => '#!setting/index/images', 'name' => '图片碎片'),			//'words'    => array('url' => '#!setting/index/words', 'name' => '文字碎片'),			'badwords' => array('url' => '#!setting/index/badwords', 'name' => '敏感词库'),			//'page'=>array('url'=>'#!setting/index/page','name'=>'分页配置'),			//'attach'=>array('url'=>'#!setting/index/attach','name'=>'附件配置'),		);		parent::__construct();		$source_file       = $this->load->config('picture', 'source_dir') . "images/";		$this->images_data = array(			'ico'        => array('title' => '浏览器头部ico图标', 'guige' => '16*16', 'url' => 'http://www.ico.la', 'des' => '请点击这里生成', 'name' => 'favicon.ico', 'address' => $source_file),			'logo'       => array('title' => '网站logo', 'guige' => '180*60', 'url' => '/', 'des' => '', 'name' => 'logo.png', 'address' => $source_file),			'share_logo' => array('title' => '分享logo', 'guige' => '600*600', 'url' => '/', 'des' => '', 'name' => 'share_logo.png', 'address' => $source_file),			'qr_code'    => array('title' => '微信二维码', 'guige' => '任意*250', 'url' => '/', 'des' => '', 'name' => 'qr_code.png', 'address' => $source_file),			'ios_code'   => array('title' => 'IOS二维码', 'guige' => '任意*250', 'url' => '/', 'des' => '', 'name' => 'ios_code.png', 'address' => $source_file),			'an_code'    => array('title' => '安卓二维码', 'guige' => '任意*250', 'url' => '/', 'des' => '', 'name' => 'an_code.png', 'address' => $source_file),			//'dpt'        => array('title' => '精简版店招', 'guige' => '640*215', 'url' => '/', 'des' => '', 'name' => 'dpt.png', 'address' => $source_file),		);		if (GID == -1) {			$this->btnMenu = array_merge(				$this->btnMenu, array(					'add' => array('url' => '#!setting/index/add', 'name' => '添加系统变量'),				)			);		}		$this->smarty->assign('btnMenu', $this->btnMenu);		#加载		$this->load->model('setting');	}	//站点配置	function index($group = 'index') {		#group不存在时 默认第一个按钮		if (!array_key_exists($group, $this->btnMenu)) {			$group = key($this->btnMenu);		}		$images_data = $this->images_data;		//更新配置		if (isset($_POST['Submit'])) {			$post          = $_POST['post'];			$post['group'] = $group;			//图片配置			if ($group == 'images') {				$file        = array();				$file        = $_FILES;				$upload_file = array();				foreach ($file as $k => $v) {					$file_path = $images_data[$k];					if ($v['name'] == $file_path['name']) {						$upload_file[$k]            = $v;						$upload_file[$k]['address'] = $file_path['address'];					}				}				foreach ($upload_file as $k => $v) {					$filename    = $v["tmp_name"];					$destination = $v['address'] . $v["name"];					if (!is_dir($v['address'])) {						mkdir($v['address'], 0777, true);					}					if (!move_uploaded_file($filename, $destination)) {						echo "移动文件出错";						exit;					} else {						$this->load->model("upload");						$this->upload->yunsave_source('/images/' . $v["name"], '', '/');					}				}			}			//文字碎片			if ($group == 'words') {				unset($post['group']);				$source_file = $this->load->config('picture', 'source_dir');				$configfile  = $source_file . "common.php";				$configfile  = AppDir . 'includes/languages/common.php';				foreach ($post as $k => $v) {					if (in_array($k, array_keys(L()))) {						$v               = str_replace(array("'", "\\"), "", trim($v));						$configs[$k]     = $v;						$pattern[$k]     = "/\['" . $k . "'\]\s*=\s*([']?)[^']*([']?)(\s*);/is";						$replacement[$k] = "['" . $k . "'] = \${1}" . $v . "\${2}\${3};";					}				}				$str = file_get_contents($configfile);				$str = preg_replace($pattern, $replacement, $str);				if (!is_dir($source_file)) {					mkdir($source_file, 0777, true);				}				file_put_contents($source_file . "common.php", $str);				$this->base->clear_caches();				$this->tip('更新成功', array('inIframe' => true));				$this->exeJs("main.refresh()");				die;			}			//敏感词库			if ($group == 'badwords') {				unset($post['group']);				$source_file    = $this->load->config('picture', 'source_dir');				$configfile     = $source_file . "badwords.php";				$badwords       = $_POST['badwords'];				$badwords_array = explode(",", $badwords);				$badwords_array = array_filter($badwords_array, 'trim');				$content        = "<?php ";				$content .= "\$badwords = " . var_export($badwords_array, true) . ";";				$content .= " ?>";				file_put_contents($configfile, $content);				$this->tip('更新成功', array('inIframe' => true));				$this->exeJs("parent.main.refresh()");				die;			}			$res = $this->setting->update($post);			$this->base->clear_caches();			if (isset($res['code']) && $res['code'] == 0) {				$this->tip($res['message'], array('inIframe' => true));				// todo 待解决 直接exeJs main.refresh并未定义				$this->exeJs("main.refresh()");			} else {				$this->tip($res['message'], array('inIframe' => true, 'type' => 1));			}			die;		}		//提交自定义变量		elseif (isset($_POST['SubmitAdd'])) {			$post              = $_POST['post'];			$post['value']     = $_POST['setup']['default'];			$post['step']      = json_encode($_POST['setup']);			$post['form_type'] = $post['type'];			$res = $this->setting->add($post);			if (isset($res['code']) && $res['code'] == 0) {				$this->tip($res['message'], array('inIframe' => true));				$this->exeJs("parent.location.href='/manage#!setting/index/" . $post['group'] . "'");			} else {				$this->tip($res['message'], array('inIframe' => true, 'type' => 1));			}			die;		}		if ($group == 'add') {			$field_type = array(				'text'     => '单行文本',				'textarea' => '多行文本',				'select'   => '下拉列表',				'radio'    => '单选按钮',				'checkbox' => '复选框',				'images'   => '图片上传控件',				'files'    => '文件上传控件',				'datetime' => '日期和时间',			);			$this->smarty->assign('field_type', $this->form->select($field_type, '', 'name="post[type]" onchange="javascript:field.chang_field(this.value,\'\',true);"'));		} else {			$formInfo = $this->setting->formInfo($group);			$this->load->model('form_field');			foreach ($formInfo as $k => $v) {				if (method_exists($this->form_field, $v['type'])) {					$v['html'] = call_user_func_array(array($this->form_field, $v['type']), array($v, $v['value']));					// $v['html'] = $this->form_field->$v['type']($v, $v['value']);				}				$formInfo[$k] = $v;			}			$this->smarty->assign('formInfo', $formInfo);		}		$this->smarty->assign('badwords', join(',', getBadWord()));		$this->smarty->assign('images_data', $images_data);		$this->smarty->assign('btnNo', $group);		$this->smarty->display('manage/setting/config.html');	}	//删除	function del() {		$id = $_POST['id'];		if (!$id) {			die;		}		admin_log('删除站点配置：' . $this->db->getstr("SELECT title FROM ###_config WHERE varname='" . $id . "'"));		$this->db->delete('###_config', array('varname' => $id));		$this->base->clear_caches('static');		$this->tip('删除成功');	}	//测试邮箱	function testMail() {		$subject = 'lnest test mail';		$message = 'this is a test mail from lnest team';		$this->load->library('mail');		if (empty($_POST['mailto'])) {			die('请填写测试邮箱地址');		}		$result = $this->mail->sendMail($_POST['mailto'], $subject, $message);		if ($result == true && !is_array($result)) {			exit('1');		} else {			if (!empty($result['error'])) {				exit($result['error']);			} else {				exit('邮件发送失败');			}		}	}	//清除缓存	function clearCaches() {		$count = $this->base->clear_caches();		$this->tip('成功更新缓存文件' . $count . '个');	}}