<?php/** * Name 微信自动回复 * Class wxreply */class wxreply extends Lowxp {	/**	 * 微信自定义回复	 */	function index() {		$this->subscribe();	}	/**	 * 关注	 */	function subscribe() {		$this->getReplyMsg('subscribe');	}	/**	 * 缺省匹配	 */	function autoreply() {		$this->getReplyMsg('autoreply');	}	/**	 * 获取自动回复规则	 * @param  string $ruleType subscribe autoreply	 * @return array            自动回复规则数组	 */	function getRule($ruleType = 'subscribe') {		$sql  = "SELECT * FROM ###_wx_autoreply_rule WHERE rule_type='" . $ruleType ."'" ;		$rule = $this->db->get($sql);		return $rule;	}	function getReplyMsg($type = 'subscribe') {		$rule = $this->getRule($type);		$rule['reply_list'] = json_decode($rule['reply_list'], true);		$msgType = empty($rule['reply_list']['msg_type']) ? 'text' : $rule['reply_list']['msg_type'];		$data = empty($rule['reply_list']['msg_id']) ? '' : $rule['reply_list']['msg_id'];		if ($msgType == 'text' && is_numeric($data)) {			$text = $this->db->get("SELECT * FROM ###_wx_autoreply_text WHERE id=" . $data);			// 注意前台js 无法处理换行 需要这里过滤一下			$data = str_replace("\n", '', $text['content']);			// $data = $text['content'];		}		$this->smarty->assign('type', $type);		$this->smarty->assign('msg_type', $msgType);		$this->smarty->assign('data', $data);		$this->smarty->display('manage/wxreply/index.html');	}	/**	 * 提交关注回复与消息回复	 */	function submitform() {		// 回复场景		$replyType = $_POST['reply_type'];		// 回复类型		$msgType = $_POST['type'];		// 为text时标识内容		// 为nes时为id		$content = $_POST['data'];		// 自动回复场景 以后可以在这里增加		$allowType = array('subscribe', 'autoreply');		in_array($replyType, $allowType) || $this->fatalError('类型错误!');		// 查找现有的自动回复规则		$sql = "SELECT * FROM ###_wx_autoreply_rule WHERE rule_type='" . $replyType . "'";		$rule = $this->db->get($sql);		$ruleId = $rule['id'];		if (empty($ruleId)) {			// 无规则id 则先插入一个规则id			$data = array(				'id'         => $ruleId,				'name'       => $replyType,				'rule_type'  => $replyType,				'keywords'   => '',				'reply_list' => '',				'c_time'     => RUN_TIME,			);			$ruleId = $this->db->insert('wx_autoreply_rule', $data);		} else {			// 为解决规则切换的问题 无论回复类型是什么都删除掉对应的文本信息			$this->db->delete('wx_autoreply_text', array('rule_id' => $ruleId));		}		// 回复规则归零		$replyList = array();		// 内容消息id		$msgId = 0;		switch ($msgType) {			case 'news':				$msgId = $content;				break;			case 'text':				$msgId = $this->db->insert('wx_autoreply_text', array(					'rule_id' => $ruleId,					'content' => clearHtml($content),				));				break;		}		if ($msgId) {			$replyList = array(				'msg_type' => $msgType,				'msg_id'   => $msgId,			);		}		$data = array(			'reply_list' => json_encode($replyList),			'c_time'     => RUN_TIME,		);		// 更新数据		$this->db->update('wx_autoreply_rule', $data, array('id' => $ruleId));		$this->tip('更新成功!');	}	/**	 * msgCount 计数	 * @return json	 */	public function getMsgCount() {		$sql   = "SELECT * FROM ###_wx_autoreply_rule " ;		$rules = $this->db->select($sql);		$msgCount = array('news' => 0, 'text' => 0, 'wheel' => 0, 'image' => 0);		foreach ($rules as $v) {			if ($v['reply_list']) {				$tmp = json_decode($v['reply_list'], true);				if (isset($tmp['msg_type'])) {					$msgCount[$tmp['msg_type']]++;				}			}		}		return $msgCount;	}	/**	 * 聊天虚拟数据	 */	function chat() {		$setting = array('tlkey' => '图灵KEY', 'tlapi' => '图灵API');		foreach ($setting as $type => $title) {			$row = $this->db->get("SELECT * FROM ###_site_info WHERE type='$type'");			if (!isset($row['id'])) {				$this->db->insert('site_info', array('title' => $title, 'type' => $type));				$row = $this->db->get("SELECT * FROM ###_site_info WHERE type='$type'");			}			$this->smarty->assign($type, $row);		}		$this->smarty->display('manage/wxreply/chat.html');	}	/**	 * 更新聊天虚拟数据	 */	function submitchat() {		if (is_array($_POST)) {			foreach ($_POST as $key => $val) {				$input = array('content' => trim($val));				$this->db->update('site_info', $input, array('type' => $key));			}		}		$this->tip('更新成功!', array('inIframe' => 'true'));	}	/**	 * 获取图文回复	 */	function getNewsList() {		$wxnews = $this->db->select("SELECT * FROM ###_wx_news");		$this->load->model('wxnews');		$wxnews = $this->wxnews->getNewsInfo($wxnews);		$this->smarty->assign('list', $wxnews);		$this->smarty->display('manage/wxreply/news_list.html');	}	/**	 * 获取选中的图文	 */	function selectNews($id) {		$wxnews = $this->db->select("SELECT * FROM ###_wx_news WHERE id = '$id'");		$this->load->model('wxnews');		$wxnews = $this->wxnews->getNewsInfo($wxnews);		$html = '<table class="list" id="news" style="width: 100%">';		foreach ($wxnews[0]['items'] as $m) {			$html .= "<tr><td class='bdl w5'></td><td class='w50'><img src='$m[imgurl_thumb]' width='50'/></td><td><div class='oi-name'>$m[title]</div></td></tr>";		}		$html .= '</table>';		echo $html;	}	function editkey($id = '') {		$data = $this->db->get("SELECT * FROM wx_reply WHERE re_id='$id'");		$data['keyword'] = unserialize($data['keyword']);		if ($data['data_type'] == 3) {			$wxnews = $this->db->select("SELECT * FROM wx_news WHERE id = '$data[content]'");			$this->load->model('wxnews');			$wxnews = $this->wxnews->getNewsInfo($wxnews);			$this->smarty->assign('wxnews', $wxnews[0]['items']);		}		$this->smarty->assign('data', $data);		$this->smarty->display('manage/wxreply/editkey.html');	}	function addkey() {		$this->smarty->display('manage/wxreply/editkey.html');	}	/**	 * 提交关键字回复	 */	function submitkey() {		$id = intval($_POST['id']);		$input = array();		$input['re_type'] = 3;		$input['rule_name'] = trim($_POST['rule_name']);		$input['data_type'] = $_POST['data_type'] ? intval($_POST['data_type']) : 1;		if ($_POST['data_type'] == 3) {			$input['content'] = intval($_POST['newsid']);		} else {			$input['content'] = trim($_POST['content']);		}		$kw = array();		if ($_POST['kw']) {			foreach ($_POST['kw'] as $key => $val) {				if ($val) {					$kw[$key]['key'] = trim($val);					$kw[$key]['match'] = $_POST['match'][$key] == 1 ? 1 : 0;				}			}		}		$input['keyword'] = serialize($kw);		if (empty($id)) {			$this->db->insert('wx_reply', $input);		} else {			$this->db->update('wx_reply', $input, array('re_id' => $id));		}		$this->tip('提交成功!');		$this->exeJs('location.href="/manage#!wxreply/setkey";');	}	/**	 * 删除关键字匹配	 */	function del($id) {		$this->db->delete('wx_reply', array('re_id' => $id));		$this->tip('删除成功!');		$this->exeJs('main.refresh();');	}}