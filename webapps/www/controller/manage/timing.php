<?php/** * ZZCMS 定期处理 * ============================================================================ * * 版权所有 2014-2016 厦门紫竹数码科技有限公司，并保留所有权利。 * 网站地址: http://www.lnest.com； * ---------------------------------------------------------------------------- * 这不是一个自由软件！您只能在不用于商业目的的前提下对程序代码进行修改和 * 使用；不允许对程序代码以任何形式任何目的的再发布。 */class timing extends Lowxp {	#单次解冻出价记录数	private $frozenNum = 10000;	function __construct() {		$this->btnMenu = array(			0 => array('url' => '#!timing/index', 'name' => '控制面板'),		);		parent::__construct();		$this->load->model('timing');	}	function index() {		$data = array();        //当前会员数和使用空间数        if(defined('MEMBER_COUNT') && in_array(Edition,array("enter_one","enter_more")) && MEMBER_COUNT>0){            $data['member_limit'] = MEMBER_COUNT;            $data['member_count'] = $this->db->getstr("select count(1) as num from ###_member where is_robots=0","num");            if(!S('CM_MEMBER_NUM')){                S('CM_MEMBER_NUM',$data['member_count']);            }        }        if(defined('IMAGE_NUM') && IMAGE_NUM>0 && in_array(Edition,array("enter_one","enter_more")) && (C('cloudsave')==0 || C('cloudsave')>0 && C('bucketname')=='pintuancc')){            $data['image_limit'] = IMAGE_NUM;            $cache_name = "CM_IMAGE_SIZE";            if(S($cache_name)){                $image_size = S($cache_name);            }else{                $image_num = $this->db->getstr("select sum(imgspace) as num from ###_images","num");                $file_num = $this->db->getstr("select sum(`size`) as num from ###_files","num");                $image_size = $image_num+$file_num;                S($cache_name,$image_size);            }            $data['image_num'] = format_bytes($image_size);        }		#判断是否清理过数据		$clear = $this->base->read_static_cache('clear', '');		if ($clear !== false) {			$data['clear'] = 1;		}		#获取系统信息		$system = array(			'ip'            => getIP(), #管理员IP			'os'            => PHP_OS, #服务器操作系统			'web_server'    => $_SERVER['SERVER_SOFTWARE'], #WEB服务器			'php_version'   => PHP_VERSION, #PHP版本			'mysql_version' => $this->db->version(), #mysql版本		);		$this->smarty->assign('system', $system);		$this->smarty->assign('data', $data);		$this->smarty->display('manage/timing/index.html');	}    function clear_zz(){        S('ZZCODE_' . md5(Domain),null);        $this->tip("操作成功！", array('inIframe' => true, 'type' => 1));        $this->exeJs("parent.window.location='/manage#!timing/index';");    }	#ajax更新定期处理	function ajaxCron() {		// 订单统计状态		$str   = "<table><tr><td style='padding-right:30px;'><b style='font-style:italic'>零售统计信息</b><br>";		$array = array(			array('lstype' => 'pay','href' => '/manage#!order/index?lstype=pay', 'text' => '等待付款'),			array('lstype' => 'shipping','href' => '/manage#!order/index?lstype=shipping', 'text' => '等待发货'),			array('lstype' => 'refund','href' => '/manage#!order/index?lstype=refund', 'text' => '退款'),		);		foreach ($array as $v) {			$num = 0;            $condition = 'WHERE is_robots=0 AND sid=0 AND (status_common=0 || (status_common=10 && extension_code!=5 && extension_code!=6) || ( (extension_code=5 || extension_code=6) && status_lottery=10) ) ';            if($v['lstype']=='shipping'){//待发货                $condition.=" AND status_pay=10 and status_order=0 and status_shipping in (0,1) ";            }elseif($v['lstype']=='pay'){//待付款                $condition.=" AND status_pay in (0,1) and status_order=0 ";            }elseif($v['lstype']=='refund'){//退款                $condition =" WHERE is_robots=0 AND sid=0 and status_order in (2,3,4) ";            }			$sql = "SELECT COUNT(id) FROM ###_goods_order " .$condition;			$num = $this->db->getstr($sql);			$num = "<b class='c-red'>$num</b>";			$str .= "<p><a class='c-gray' href='" . $v['href'] . "'>" . $v['text'] . "（" . $num . "）</a></p>";		}		$str .= '</td></tr></table>';		exit($str);	}	#清理数据库	function clear() {		//演示站屏蔽此功能		if (IS_DEV) {			exit('本地禁用此功能！');		}		//判断清理日志		$data = $this->base->read_static_cache('clear', '');		if ($data !== false) {			exit('已清理过数据，请先删除清理日志文件！');		}		//清理数据库		$this->db->delete('account_log', '1=1');		$this->db->delete('commission', '1=1');		$this->db->delete('cart', '1=1');		$this->db->delete('fav', '1=1');		$this->db->delete('goods_order', '1=1');		$this->db->delete('goods_order_item', '1=1');		$this->db->delete('goods_order_item_pack', '1=1');		$this->db->delete('goods_order_log', '1=1');		$this->db->delete('member', '1=1');		$this->db->delete('member_account', '1=1');		$this->db->delete('member_address', '1=1');		$this->db->delete('member_bankcard', '1=1');		$this->db->delete('member_bonus', '1=1');		$this->db->delete('member_fri', '1=1');		$this->db->delete('member_login_log', '1=1');		$this->db->delete('m_user_log', '1=1');		$this->db->delete('pay_log', '1=1');		$this->db->delete('search', '1=1');		$this->db->delete('share', '1=1');		$this->db->delete('sms', '1=1');		$this->db->delete('verify_code', '1=1');		$this->db->delete('withdraw_commission', '1=1');		//生成清理日志		admin_log('一键清理数据');		$this->base->write_static_cache('clear', array('time' => time()), '');		exit('0');	}			//检查更新    function checkUpdate(){        //$url = 'http://auth.aiwopai.com/api/check_update_package';        $url = 'http://ygauth.cc/api/check_update_package';        $arrayJia['type'] = isset($_POST['type']) ? intval($_POST['type']) : 0;        //传送插件版本        if(file_exists(AppDir.'config/version_bargain.php')){            include(AppDir.'config/version_bargain.php');            $arrayJia['Version_bargain'] = Version_bargain;        }				//传送插件版本（积分）        if(file_exists(AppDir.'config/version_score.php')){            include(AppDir.'config/version_score.php');            $arrayJia['Version_score'] = Version_score;        }        //传送插件版本（大转盘）        if(file_exists(AppDir.'config/version_wheel.php')){            include(AppDir.'config/version_wheel.php');            $arrayJia['Version_wheel'] = Version_wheel;        }        //传送插件版本（助力）        if(file_exists(AppDir.'config/version_assist.php')){            include(AppDir.'config/version_assist.php');            $arrayJia['Version_assist'] = Version_assist;        }                        $data = curlPostUpdate('', $arrayJia);        die(json_encode($data));    }    //安装更新    function installUpdate(){        if(!isset($_POST['queue'])){ die(); }        set_time_limit(0);        //队列参数        $params = array(            'queue' => 'queue_update', #队列变量名            'size'  => 1, #单次执行条数            'msg'   => '系统升级成功', #执行完毕提示        );        //返回数据        $result = array(            'error' => 0, #error错误代码            'head'  => '<a href="javascript:;" onclick="cron.init(\'update\')">系统升级...</a>', #head队列标题            'msg'   => '', #msg当前进度任务            'size'  => 0, #size剩余条数            'count' => 0, #count处理总条数        );        $queue = $params['queue'];        $add = intval($_POST['add']);        //远程路径/临时路径        $src = $_POST['query']['pack']['src'];        $info = pathinfo($src);        $savePath = RUNTIME_PATH.md5($info['filename']).'.'.$info['extension'];        //创建队列        if($add==1){            queue_initialize($queue);            //生成安装过程            $list = array(                array('key'=>'start','title'=>'检查更新中...'),                array('key'=>'download_start','title'=>'下载更新包...'),                array('key'=>'download','title'=>'下载更新包...'),                array('key'=>'unzip','title'=>'安装更新包...'),                array('key'=>'installDb','title'=>'安装数据库...'),                array('key'=>'clear','title'=>'清除缓存...'),            );            foreach($list AS $k=>$v){                queue_enqueue($queue, $k, $v);            }            $result['count'] = queue_size($queue);        }        //队列执行中...        if(queue_size($queue)>0){            for($i=0;$i<$params['size'];$i++){                $id = queue_dequeue($queue);                $v = queue_peek_vals($queue);                if($v['key'] == 'download'){                    //下载更新包                    $content = file_get_contents($src);                    					file_put_contents($savePath, $content, true);                    if(!is_file($savePath)){                        queue_destroy($queue);                        $result['error'] = 1001;                        $result['msg'] = '更新包下载失败！';                        die(json_encode($result));                    }                }elseif($v['key'] == 'unzip'){                    //解压并安装更新包                    $zip = new ZipArchive;                    if(!isset($zip->status)){                        if(is_file($savePath)){ @unlink($savePath); }                        queue_destroy($queue);                        $result['error'] = 1001;                        $result['msg'] = '请先开启php_zip扩展！';                        die(json_encode($result));                    }else{                        $res = $zip->open($savePath);                        //如果打开成功                        if ($res === TRUE) {                            $zip->extractTo(RootDir);                        } else {                            //输出出错的代码                        }                        $zip->close();                        if(is_file($savePath)){ @unlink($savePath); }                    }                }elseif($v['key'] == 'installDb'){                    $sql_file = RUNTIME.'update.sql';                    if(is_file($sql_file)){                        $sql = file_get_contents($sql_file);                        $sql = str_replace("\r", "\n", $sql);                        $sql = explode(";\n", $sql);                        foreach ($sql as $value) {                            $value = trim($value);                            if (empty($value)) {                                continue;                            }                            $this->db->query($value);                        }                        @unlink($sql_file);                    }                }elseif($v['key'] == 'clear'){                    $this->base->clear_caches();                }                $result['msg'] .= '<p>'.$v['title'].'</p>';            }            $result['error'] = 0000;            $result['size'] = queue_size($queue);        }        //队列执行完成        else{            queue_destroy($queue);            $result['error'] = 1002;            $result['msg'] = $params['msg'];            //写入日志            admin_log('系统升级至版本：'.Version);        }        die(json_encode($result));    }    #更新包日志    function updateLog() {        // 订单统计状态        $log  = $this->base->read_static_cache('update_log');        if($log==false){            $log = curlPostUpdate("http://ptauth.yyaiwopai.com.cn/api/get_update_log");            $this->base->write_static_cache('update_log', $log);        }        $str = "";        if($log){            foreach($log as $k=>$v){                $str .= "<p>更新包【{$v['version']}】<a data-title='更新包【{$v['version']}】' data-target='#modal-log-{$v['id']}' data-toggle='modal' title='更新包' class='c-green e2-main-modal' href='javascript:;'>查看内容</a><div id='modal-log-{$v['id']}' class='hidden'>{$v['content']}</div></p>";            }        }        exit($str);    }}