<?php/** * Class linkage_model */class linkage_model extends Lowxp_Model {	private $baseTable = '###_linkage';	function __construct() {}	//获取下一级联动菜单	function select($parentid = false) {		$where = ' WHERE lang=' . LANG_ID;		if ($parentid !== false) {			$parentid = (int) $parentid;			$where .= ' AND parentid=' . $parentid;		}		$array = $this->db->select("SELECT * FROM " . $this->baseTable . $where . " ORDER BY listorder,id");		$list = array();		foreach ($array as $v) {			$list[$v['id']] = $v;		}		return $list;	}    function select_bak($parentid = false) {        $where = ' WHERE parentid!=0 and lang=' . LANG_ID;        $array = $this->db->select("SELECT * FROM " . $this->baseTable . $where . " ORDER BY listorder,id");        $list = array();        foreach ($array as $v) {            unset($v['description']);            unset($v['listorder']);            unset($v['lang']);            unset($v['mark']);            $list[$v['id']] = $v;        }        return $this->genTree9($list);        $area_cache = "CM_AREA_LIST";        $tree_cache = "CM_AREA_LIST_TREE";        if(!S($area_cache)){            $array = $this->db->select("SELECT * FROM " . $this->baseTable . $where . " ORDER BY listorder,id");            $list = array();            foreach ($array as $v) {                $list[$v['id']] = $v;            }            S($area_cache,$list);            $list_tree = $this->genTree9($list);            S($tree_cache,$list_tree);        }else{            $list = S($area_cache);        }        return $list;    }    function genTree9($list) {        $tree = array();        foreach ($list as $k => $v) {            if (isset($list[$v['parentid']])) {                $list[$v['parentid']]['sub'][$k] = &$list[$k];            } else {                $tree[$v['id']] = &$list[$k];            }        }        return $tree;    }	//获取单个信息	function get($id) {		$id = intval($id);		$where = ' WHERE lang=' . LANG_ID;		$sql = "SELECT * FROM " . $this->baseTable . $where . " AND id=" . $id;		return $this->db->get($sql);	}	//保存所有父类到数组	function parentArr($id) {		$arrparentid = 0;		$res = array();		if ($id) {			$res = $this->get($id);			$arrparentid = $res['arrparentid'];		}		$arrparentid = explode(',', $res ? ($arrparentid . ',' . $id) : 1);		return $arrparentid;	}	//保存数据	function save() {		$post = $_POST['post'];		$id = isset($post['id']) ? intval($post['id']) : 0;		#获取父级		$post['parentid'] = array_filter($post['parentid']);		$post['parentid'] = end($post['parentid']);        if (is_array($post['thumb'])) {            $_arrData = array();            foreach ($post['thumb']['path'] as $k => $v) {                $_arrData[$k]['path'] = $v;                $_arrData[$k]['title'] = $post['thumb']['title'][$k];                $_arrData[$k]['iosurl'] = $post['thumb']['iosurl'][$k];                $_arrData[$k]['anurl'] = $post['thumb']['anurl'][$k];            }            $post['thumb'] = json_encode($_arrData);        }        if (is_array($post['ad'])) {            $_arrData = array();            foreach ($post['ad']['path'] as $k => $v) {                $_arrData[$k]['path'] = $v;                $_arrData[$k]['title'] = $post['ad']['title'][$k];                $_arrData[$k]['iosurl'] = $post['ad']['iosurl'][$k];                $_arrData[$k]['anurl'] = $post['ad']['anurl'][$k];            }            $post['ad'] = json_encode($_arrData);        }		#表单处理		$post['name'] = trim($post['name']);		if (empty($post['name'])) {			return array('code' => 10001, 'message' => '请输入联动菜单名称!');		}		if ($id) {			#不能转移到自身或子级栏目下			$res = $this->db->get("select arrchildid from " . $this->baseTable . " where id='$id' AND lang=" . LANG_ID);			$child_arr = $this->base->explodeChar($res['arrchildid'], ',');			if (in_array($post['parentid'], $child_arr)) {				return array('code' => 10001, 'message' => '菜单转移失败，请重新选择上级联动菜单!');			}		}		if ($post['parentid'] == 0 && empty($post['mark'])) {return array('code' => 10001, 'message' => '请输入一级菜单标识!');}		#初始值		$post['mark'] = trim($post['mark']);		if (!$id) {			$post['lang'] = LANG_ID;		}		#处理批量栏目名		$names = array();		$array = $this->base->explodeChar($post['name'], "\n");		foreach ($array as $k => $v) {			if (trim($v)) {				$names[] = $v;				if ($post['parentid'] == 0) {					break;				}			}		}		#重复处理		$where = $post['id'] ? ' and id!=' . $id : '';		$where .= ' and lang=' . LANG_ID;		if ($post['parentid'] == 0) {			$res = $this->db->select("select id from " . $this->baseTable . " where mark='" . trim($post['mark']) . "'" . $where);			if ($res) {return array('code' => 10003, 'message' => '菜单标识已经存在，请更换!');}		}		#保存		$where = $id ? array('id' => (int) $id) : '';		$res = false;		$res_id = '';		foreach ($names as $v) {			$post['name'] = $v;			$res = $this->db->save($this->baseTable, $post, '', $where);			$temp_id = empty($post['id'])?$res:$post['id'];			//联动添加商家父级			$arrparentid = "0";            if($post['parentid']){                $p = $this->db->get("select arrparentid from ###_linkage where id=".$post['parentid']);                $arrparentid = $p["arrparentid"].",".$post["parentid"];            }            $arrchildid = $temp_id;            $this->db->update("###_linkage",array('arrparentid'=>$arrparentid,'arrchildid'=>$arrchildid),array('id'=>$temp_id));		}		//$this->repair();		//$this->repair();		if ($post['parentid'] > 0) {			$this->update_parent($post['parentid']);		}		if ($res===faslse) {return array('code' => 10002, 'message' => '数据操作失败!');} //未知错误        //清除地区缓存        S("CM_AREA_NAME_ID_LIST",null);		if ($id) {			admin_log('编辑联动菜单：' . implode(',', $names));			return array('code' => 0, 'type' => 'update', 'message' => '更新成功');		} else {			admin_log('添加联动菜单：' . implode(',', $names));			return array('code' => 0, 'type' => 'insert', 'message' => '添加成功');		}	}	#更新父类的子集	function update_parent($pid) {		$res        = $this->db->select("select id from ###_linkage where find_in_set('" . $pid . "',arrparentid)");		$arrchildid = $pid;		foreach ($res as $v) {			$arrchildid .= "," . $v['id'];		}		$this->db->update("###_linkage", array('child' => 1, 'arrchildid' => $arrchildid), array('id' => $pid));		$rone = $this->db->get("select parentid from ###_linkage where id =" . $pid);		if ($rone['parentid'] > 0) {			$this->update_parent($rone['parentid']);		} else {			return false;		}	}	#批量处理	function repair() {		@set_time_limit(500);		$this->linkage = $linkage = array();		$linkage = $this->db->select("select * from " . $this->baseTable . " where parentid=0 AND lang=" . LANG_ID);		$this->set_linkage($linkage);		if (is_array($this->linkage)) {			foreach ($this->linkage as $id => $cat) {				$this->linkage[$id]['arrparentid'] = $arrparentid = $this->get_arrparentid($id);				$this->linkage[$id]['arrchildid'] = $arrchildid = $this->get_arrchildid($id);				$child = is_numeric($arrchildid) ? 0 : 1;				$this->db->update($this->baseTable, array('arrparentid' => $arrparentid, 'arrchildid' => $arrchildid, 'child' => $child), array('id' => $id));			}		}	}	#递归输出所有菜单	function set_linkage($linkage = array()) {		if (is_array($linkage) && !empty($linkage)) {			foreach ($linkage as $id => $c) {				$this->linkage[$c['id']] = $c;				$r = $this->db->select("select * from " . $this->baseTable . " where parentid=" . $c['id'] . " AND lang=" . LANG_ID);				$this->set_linkage($r);			}		}		return true;	}	#重新获取所有父级	function get_arrparentid($id, $arrparentid = '') {		if (!is_array($this->linkage) || !isset($this->linkage[$id])) {			return false;		}		$parentid = $this->linkage[$id]['parentid'];		$arrparentid = $arrparentid ? $parentid . ',' . $arrparentid : $parentid;		if ($parentid) {			$arrparentid = $this->get_arrparentid($parentid, $arrparentid);		} else {			$this->linkage[$id]['arrparentid'] = $arrparentid;		}		return $arrparentid;	}	#重新获取所有子级	function get_arrchildid($id) {		$arrchildid = $id;		if (is_array($this->linkage)) {			foreach ($this->linkage as $catid => $cat) {				if ($cat['parentid'] && $id != $catid) {					$arrparentids = $this->base->explodeChar($cat['arrparentid'], ',');					if (in_array($id, $arrparentids)) {						$arrchildid .= ',' . $catid;					}				}			}		}		return $arrchildid;	}	#栏目子级筛选	function condArrchild($id) {		$res = $this->db->get('select arrchildid from ' . $this->baseTable . ' where id=' . $id);		return " IN(" . $res['arrchildid'] . ") ";	}	/** 获取联动面包屑	 * @param $id	 * @param $top 是否显示顶级	 * @return string	 */	function pos_linkage($id, $top = true) {		$str          = '';		$list_linkage = $this->select();		$arrparentid  = $list_linkage[$id]['arrparentid'];		$arrparentid  = explode(',', $arrparentid . ',' . $id);		$arrparentid  = array_filter($arrparentid);		$i = 0;		foreach ($arrparentid as $k => $v) {			if ($i == 0) {				if ($top) {$str .= $list_linkage[$v]['name'] . '(' . $list_linkage[$v]['mark'] . ')';}			} else {				if (!$top && $i == 1) {} else { $str .= ' > ';}				$str .= $list_linkage[$v]['name'];			}			$i++;		}		return $str;	}	/** 下拉联动效果	 * @param $id 选择的联动ID	 * @param $hideTop 是否隐藏一级	 * @param $field 模型字段名	 * @param $view 前台显示	 * @param $str_start select元素前的html eg:<ul><li>	 * @param $str_end   select元素后的html eg:</li></ul>	 */	function select_linkage($id, $hideTop = 0, $field = '', $view = false, $str_start = '', $str_end = '') {		$id = (int) $id;		$hideTop = (int) $hideTop;		$str = '';		$endid = '';		$name = 'post[parentid][]';		$default = '请选择';		if ($field) {			$name = "post[$field][]";		}		if ($view) {			$name = $field . "[]";		}		$arrparentid = $this->parentArr($id);		if ($arrparentid && $id != 0) {			$arrparentid = array_filter($arrparentid);		}		foreach ($arrparentid as $i => $pid) {			$endid = $pid;			$row = $this->linkage->get($pid);			if ($hideTop == 1 && $row['parentid'] == 0) {continue;}			$array = $this->linkage->select($row['parentid']);			if (empty($array)) {				continue;			}			$list = array();			foreach ($array as $k => $v) {				$list[$k] = $v['name'];			}			$str .= $this->form->select($list, $pid, 'name="' . $name . '" onchange="linkage.chang_parent(this.value,' . $hideTop . ',\'' . $field . '\',\'' . $str_start . '\',\'' . $str_end . '\',0)"', $default, ($i > 0) ? $arrparentid[$i - 1] : '', $str_start, $str_end,0);		}		if ($id != 0 && $endid) {			$array = $this->linkage->select($endid);			$list = array();			foreach ($array as $k => $v) {				$list[$k] = $v['name'];			}			if (!empty($list)) {				$str .= $this->form->select($list, 0, 'name="' . $name . '" onchange="linkage.chang_parent(this.value,' . $hideTop . ',\'' . $field . '\',\'' . $str_start . '\',\'' . $str_end . '\',0)"', $default, '', $str_start, $str_end,0);			}		}		return $str;	}	/** 显示开通城市的下拉	 * @param $id 选择的联动ID	 * @param $hideTop 是否隐藏一级	 * @param $field 模型字段名	 * @param $view 前台显示	 * @param $str_start select元素前的html eg:<ul><li>	 * @param $str_end   select元素后的html eg:</li></ul>	 */	function select_showlinkage($id, $hideTop = 0, $field = '', $view = false, $str_start = '', $str_end = '') {		$id = (int) $id;		$hideTop = (int) $hideTop;		$str = '';		$endid = '';		$name = 'post[parentid][]';		$default = '请选择';		if ($field) {			$name = "post[$field][]";		}		if ($view) {			$name = $field . "[]";		}		$sql = "SELECT * FROM " . $this->baseTable . " WHERE status=1 AND id=" . $id;        $res = $this->db->get($sql);        $arrparentid = explode(',', $res ? ($res['arrparentid'] . ',' . $id) : 1);		if ($arrparentid && $id != 0) {			$arrparentid = array_filter($arrparentid);		}		foreach ($arrparentid as $i => $pid) {			$endid = $pid;			$row = $this->db->get($sql = "SELECT * FROM " . $this->baseTable . " WHERE status=1 AND id=" . $pid);			if ($hideTop == 1 && $row['parentid'] == 0) {continue;}            $res_list = $this->db->select("SELECT * FROM " . $this->baseTable .  " where status=1 AND parentid={$row['parentid']} ORDER BY listorder,id");            if (empty($res_list)) {                continue;            }            $list = array();            foreach ($res_list as $v) {                $list[$v['id']] = $v['name'];            }			$str .= $this->form->select($list, $pid, 'name="' . $name . '" onchange="linkage.chang_parent(this.value,' . $hideTop . ',\'' . $field . '\',\'' . $str_start . '\',\'' . $str_end . '\',1)"', $default, ($i > 0) ? $arrparentid[$i - 1] : '', $str_start, $str_end);		}		if ($id != 0 && $endid) {            $end_list = $this->db->select("SELECT * FROM " . $this->baseTable .  " where status=1 AND parentid={$endid} ORDER BY listorder,id");            $list = array();            foreach ($end_list as $v) {                $list[$v['id']] = $v['name'];            }			if (!empty($list)) {				$str .= $this->form->select($list, 0, 'name="' . $name . '" onchange="linkage.chang_parent(this.value,' . $hideTop . ',\'' . $field . '\',\'' . $str_start . '\',\'' . $str_end . '\',1)"', $default, '', $str_start, $str_end);			}		}		return $str;	}	function selectLinkageByIds($ids, $select = '*'){		if(is_array($ids)){			$ids = implode(',', $ids);		}		return $this->db->select("SELECT $select FROM $this->baseTable WHERE id IN ($ids)");	}    //根据地址获取id	function strToZone($str = ''){        $scache = "CM_AREA_NAME_ID_LIST";        if(!S($scache)){            $res = $this->select();            $list = array_combine(array_column($res,'name'),array_column($res,"id"));            S($scache,$list);        }else{            $list = S($scache);        }        return isset($list[$str])?$list[$str]:'';    }    /*    * 获取地区导航    */    function get_nav($id=0,$page=1,$size=10,$option=array()){        #分页        $this->load->model('page');        $_GET['page'] = intval($page);        $where = '';        if($id>0){            $where .= " and zone=".$id;        }        if($option['where'])$where .= $option['where'];        $orderby = !empty($option['orderby'])?$option['orderby']:" listorder desc,id desc ";        $this->page->set_vars(array('per' =>$size));        $sql = "select * from ###_linkage_nav where 1 {$where} order by {$orderby}";        $list = $this->page->hashQuery($sql)->result_array();        return $list;    }    /*     * 获取导航详情     */    function get_nav_one($id=0){        return $this->db->get("select * from ###_linkage_nav where id={$id}");    }    /*     * 添加地区导航     */    function nav_save(){        $post = $_POST['post'];        $id = isset($post['id']) ? intval($post['id']) : 0;        $where = array();        if($id){            $where = array("id"=>$id);        }else{            $post['createtime'] = RUN_TIME;        }        if (is_array($post['img'])) {            $_arrData = array();            foreach ($post['img']['path'] as $k => $v) {                $_arrData[$k]['path'] = $v;                $_arrData[$k]['title'] = $post['img']['title'][$k];                $_arrData[$k]['iosurl'] = $post['img']['iosurl'][$k];                $_arrData[$k]['anurl'] = $post['img']['anurl'][$k];            }            $post['img'] = json_encode($_arrData);        }        $res = $this->db->save("linkage_nav", $post, '', $where);        if($res===false)return array('code' => 10001, 'type' => 'error', 'message' => '操作失败');        if ($id) {            return array('code' => 0, 'type' => 'update', 'message' => '更新成功');        } else {            return array('code' => 0, 'type' => 'insert', 'message' => '添加成功');        }    }    /*     * 通过地区获取广告和导航     */    function get_nav_by_zone($zone=0){        if(!$zone)return false;        $info = $this->linkage->get($zone);        if($info['thumb']){            $data['thumb'] = json_decode($info['thumb'],true);            if($data['thumb']){                foreach($data['thumb'] as $tk=>$tv){                    $tv['path'] = yunurl($tv['path']);                    $data['thumb'][$tk] = $tv;                }            }        }        if($info['ad']){            $data['ad'] = json_decode($info['ad'],true);            if($data['ad']){                foreach($data['ad'] as $adk=>$adv){                    $adv['path'] = yunurl($adv['path']);                    $data['ad'][$adk] = $adv;                }            }        }        if($info['parentid']>0){            $parent = $this->linkage->get($info['parentid']);            if(empty($data['thumb'])){                $data['thumb'] = json_decode($parent['thumb'],true);                if($data['thumb']){                    foreach($data['thumb'] as $tk=>$tv){                        $tv['path'] = yunurl($tv['path']);                        $data['thumb'][$tk] = $tv;                    }                }            }            if(empty($data['ad'])){                $data['ad'] = json_decode($parent['ad'],true);                if($data['ad']){                    foreach($data['ad'] as $adk=>$adv){                        $adv['path'] = yunurl($adv['path']);                        $data['ad'][$adk] = $adv;                    }                }            }        }        $data['nav'] = $this->get_nav($zone,1,10);        if(empty($data['nav']) && $info['parentid']>0){            $data['nav'] = $this->linkage->get_nav($info['parentid'],1,10);        }        foreach($data['nav'] as $k=>$v){            $tmp = json_decode($v['img'],true);            $tmp[0]['path'] = yunurl($tmp[0]['path']);            $v['img'] = $tmp[0];            $data['nav'][$k] = $v;        }        return $data;    }    /** 显示开通城市的下拉     * @param $id 选择的联动ID     *     * @param $field 模型字段名     *     * @param $table 表名     * @param $zone 地区id     * @param $str_start select元素前的html eg:<ul><li>     * @param $str_end   select元素后的html eg:</li></ul>     */    function select_cat($id=0, $field = 'cid', $table = 'goods_cat', $zone = 0, $str_start = '', $str_end = '') {        $id = (int) $id;        $str = '';        $name = 'post[parentid][]';        $default = '请选择';        //商品分类事件        //$_event = $table=='goods_cat'?' class="e2-goods-changeselectcid" ':'';        $_event = '';        if ($field) {            $name = "post[$field][]";        }        $where = ' 1 ';        if ($table == 'linkage_cat' && $zone>0) {            $id = !empty($id)?$id:0;            $this->load->model('linkage');            $zone_row = $this->linkage->get($zone);            /*if(substr_count($zone_row['arrparentid'],',')>2){                $zone_array = explode(",",$zone_row['arrparentid']);                $zoneid = $zone_array[3];                $zone_row = $this->linkage->get($zoneid);            }*/            $zone_row['catid'] = !empty($zone_row['catid'])?$zone_row['catid']:0;            $where .= " AND id IN ({$zone_row['catid']}) ";        }elseif($table == 'linkage_cat'){            $where .= " AND 1=2 ";        }        $sql = "SELECT * FROM ###_{$table} WHERE {$where} and ismenu=1 AND id=" . $id;        $res = $this->db->get($sql);        if($res && $res['parentid']>0){            $arrparentid = explode(',', $res['arrparentid']. ',' . $id);            if ($arrparentid && $id != 0) {                $arrparentid = array_filter($arrparentid);            }            foreach ($arrparentid as $i => $pid) {                $row = $this->db->get($sql = "SELECT * FROM ###_{$table} WHERE {$where} and  ismenu=1 AND id=" . $pid);                $res_list = $this->db->select("SELECT * FROM ###_{$table} WHERE {$where} and  ismenu=1 AND parentid={$row['parentid']} ORDER BY listorder asc,id desc");                if (empty($res_list)) {                    continue;                }                $list = array_combine(array_column($res_list,"id"),array_column($res_list,"catname"));                $str .= $this->form->select($list, $pid, 'name="' . $name . '" onchange="select_cat.chang_parent(this.value,\'' . $table . '\',\'' . $field . '\',\'' . $str_start . '\',\'' . $str_end . '\','.$zone.')" '.$_event, $default, ($i > 0) ? $arrparentid[$i - 1] : '', $str_start, $str_end);            }        }else{            $sql = "SELECT * FROM ###_{$table} WHERE {$where} and  ismenu=1 AND parentid=0";            $res_list = $this->db->select($sql);            if($res_list){                $list = array_combine(array_column($res_list,"id"),array_column($res_list,"catname"));                $str .= $this->form->select($list, $id, 'name="' . $name . '" onchange="select_cat.chang_parent(this.value,\'' . $table . '\',\'' . $field . '\',\'' . $str_start . '\',\'' . $str_end . '\','.$zone.')" '.$_event, $default, '', $str_start, $str_end);            }        }        if ($res['child']==1) {            $end_list = $this->db->select("SELECT * FROM ###_{$table} WHERE {$where} and ismenu=1 AND parentid={$id} ORDER BY listorder asc,id desc");            if($end_list)$end_list = array_combine(array_column($end_list,"id"),array_column($end_list,"catname"));            if (!empty($end_list)) {                $str .= $this->form->select($end_list, 0, 'name="' . $name . '" onchange="select_cat.chang_parent(this.value,\'' . $table . '\',\'' . $field . '\',\'' . $str_start . '\',\'' . $str_end . '\','.$zone.')" '.$_event, $default, '', $str_start, $str_end);            }        }        return $str;    }}