<?php/** * 回复信息处理模块 */class wxnews_model extends Lowxp_Model {	/**	 * 同时用作编辑和获取回复信息	 * @param $wxnews	 * @return array	 */	function getNewsInfo($wxnews) {		$single = false;		if (isset($wxnews['id'])) {			$single = true;			$wxnews = array($wxnews);		}		$newsIds = array_column($wxnews, 'id');		if (count($newsIds)) {			$items = $this->db->select("SELECT * FROM ###_wx_news_item WHERE news_id IN(" . implode(',', $newsIds) . ")");			$this->load->model('upload');			$items  = $this->upload->getImgUrls($items, 'cover', 'gallery', array('thumb', 'src'));			$width  = 140;			$height = 70;			$this->load->model('share');			$newsItem = array();			foreach ($items as $key => $val) {				$val['thumb_size']  = $this->share->getSizeFormat($val['img_size'], $width, $height);				$val['PicUrl']      = $val['imgurl']      = (strpos($val['imgurl_src'], '://') ? '' : rtrim(RootUrl, '/')) . $val['imgurl_src'];				$val['Title']       = $val['title'];				$val['Description'] = $val['desc'];				$val['Url']         = isset($val['url']) ? $val['url'] : RootUrl . 'wxnews/detail/' . $val['id'];				$newsItem[$val['news_id']][] = $val;			}			foreach ($wxnews as $key => $val) {				$wxnews[$key]['items'] = isset($newsItem[$val['id']]) ? $newsItem[$val['id']] : array();			}		}		return $single ? $wxnews[0] : $wxnews;	}	/**	 * 根据 reply_list 获取回复内容 用来组成自动回复编辑窗口 和微信回复	 * @param  array  $replyList [description]	 * @return [type]         [description]	 */	function getMsgsByReplyList($replyList = array()) {		$single = false;		if (isset($replyList['msg_type'])) {			// 无列表简单数组 则为单条消息			$single    = true;			$replyList = array($replyList);		}		if (empty($replyList[0]['msg_type'])) {			// 如果数组不和规范则返回空数组			IS_DEV && Log::write('wxnews_model/getMsgsByReplyList: ' . json_encode($reply_list));			return array();		}		// 初始化数据 存储类别id数组  目前只有 text news 并无image信息 后期可扩展		$ids = array(			'text'  => array(),			'news'  => array(),			'image' => array(),		);		#$imgids = array();		foreach ($replyList as $val) {			$ids[$val['msg_type']][] = $val['msg_id'];		}		// 临时结果数组		$matchdata = array();		#文本		if (count($ids['text'])) {			$textlist = $this->db->select("SELECT * FROM ###_wx_autoreply_text WHERE id IN(" . implode(',', $ids['text']) . ")");			foreach ($textlist as $val) {				$matchdata['text'][$val['id']] = $val;			}		}		#图文		if (count($ids['news'])) {			$newslist = $this->db->select("SELECT * FROM ###_wx_news_item WHERE news_id IN(" . implode(',', $ids['news']) . ")");			$this->load->model('upload');			$newslist = $this->upload->getImgUrls($newslist, 'cover', 'gallery', array('thumb', 'src'));			$width    = 140;			$height   = 70;			$this->load->model('share');			// 为同时兼容微信图文 和 后台编辑 这里做了混合处理			// 注意下面的Rooturl 和前台显示页面展示控制器			foreach ($newslist as $val) {				$val['thumb_size']  = $this->share->getSizeFormat($val['img_size'], $width, $height);				$val['PicUrl']      = $val['imgurl']      = (strpos($val['imgurl_src'], '://') ? '' : rtrim(RootUrl, '/')) . $val['imgurl_src'];				$val['Title']       = $val['title'];				$val['Description'] = $val['desc'];				$val['Url']         = isset($val['url']) ? $val['url'] : RootUrl . 'wxnews/detail/' . $val['id'];				$matchdata['news'][$val['news_id']]['news_list'][] = $val;			}		}		// 结果数组		$ret = array();		// 将根据replyList查询到的明细结果跟 replyList 合并		foreach ($replyList as $key => $val) {			if (isset($matchdata[$val['msg_type']][$val['msg_id']])) {				$tmp1      = $matchdata[$val['msg_type']][$val['msg_id']];				$ret[$key] = array_merge($tmp1, $val);			}		}		return $single ? $ret[0] : $ret;	}	/**	 * 根据zz_wx_autoreply_rule表的 reply_list字段 获取内容标题的一维数组 用来在自定义回复规则列表显示 内容标题	 * @param  array  $replyList reply_list	 * @return array          内容标题的一维数组	 */	function getTitlesByReplys($replyList = array()) {		// $single = false;		if (isset($replyList['msg_type'])) {			// 无列表简单数组 则为单条消息			// $single    = true;			$replyList = array($replyList);		}		if (empty($replyList[0]['msg_type'])) {			// 如果数组不和规范则返回空数组			IS_DEV && Log::write('wxnews_model/getTitlesByReplys: ' . json_encode($reply_list));			return array();		}		// 初始化数据 存储类别id数组  目前只有 text news 并无image信息 后期可扩展		$ids = array(			'text'  => array(),			'news'  => array(),			'image' => array(),		);		#$imgids = array();		foreach ($replyList as $val) {			$ids[$val['msg_type']][] = $val['msg_id'];		}		// 临时结果数组		$res = array();		#文本		if (count($ids['text'])) {			$textlist = $this->db->select("SELECT * FROM ###_wx_autoreply_text WHERE id IN(" . implode(',', $ids['text']) . ")");			foreach ($textlist as $val) {				$res[] = '文本: ' . $val['content'];			}		}		#图文		if (count($ids['news'])) {			$newslist = $this->db->select("SELECT * FROM ###_wx_news_item WHERE news_id IN(" . implode(',', $ids['news']) . ")");			foreach ($newslist as $val) {				$res[] = '图文: ' . $val['title'];			}		}		return $res;	}}