<?php/** * 佣金 * Class comss_model */class commission_model extends Lowxp_Model {    #统计今日佣金    function getComssTotal($mid){        $today =  strtotime(date("Ymd",RUN_TIME));        $sql = "select sum(commission) as total from ###_commission where mid={$mid} and addtime>={$today}";        return $this->db->getstr($sql,"total");    }	#获取佣金记录	function getCommission($data = array(), $limit = '', $page = 1, $order = "id desc") {		$where = " WHERE 1 ";		if ($data['order_id']) {			$where .= " AND order_id=" . $data['order_id'];		}		if ($data['mid']) {			$where .= " AND mid=" . $data['mid'];		}		if ($data['where']) {			$where .= $data['where'];		}		$sql = "SELECT * from ###_commission {$where} ORDER BY {$order}";		if ($limit == "all") {			$list = $this->db->select($sql);		} else {			$this->load->model('page');			$_GET['page'] = $page;			if (intval($limit) > 0) {				$this->page->set_vars(array('per' => intval($limit)));			}			$list = $this->page->hashQuery($sql)->result_array();		}		return $list;	}    #佣金提现    function withdraw_commission($post){        if($post['type']>0){#线下转账需要提供姓名、账号            if(empty($post['realname']))return array('error'=>10001,'msg'=>"请输入真实姓名");            if(empty($post['account']))return array('error'=>10002,'msg'=>"请输入真实姓名");        }        $withdraw_money = is_numeric($post['amount']) ? $post['amount'] : 0;        if ($withdraw_money <= 0) {            return array('error'=>10003,'msg'=>"请输入正确金额");        }        if($withdraw_money<C('comm_limit_min') || $withdraw_money>C('comm_limit_max')){            return array('error'=>10004,'msg'=>"请输入提现范围内的金额");        }        if ($this->memberinfo['commission'] < $withdraw_money) {            return array('error'=>10005,'msg'=>"金额不能大于可用佣金");        }        $insert_arr               = array();        $insert_arr['mid']        = MID;        $insert_arr['username']   = USER;        $insert_arr['type']   = $post['type'];        $insert_arr['realname']   = $post['realname'];        $insert_arr['account']   = $post['account'];        $insert_arr['openid']   = $post['openid'];        $insert_arr['commission'] = $withdraw_money;        $insert_arr['amount']  = $withdraw_money;        $insert_arr['fee']     = 0;        $insert_arr['status']  = 0;        $insert_arr['addtime'] = RUN_TIME;        $this->db->insert('withdraw_commission', $insert_arr);        $this->db->update('member', "commission = commission-$withdraw_money , deduct_commission = deduct_commission + $withdraw_money", array('mid' => MID));        return array('error'=>0,'msg'=>"申请成功");    }    #获取佣金提现记录    function getWithdrawCommission($data = array(), $limit = '', $page = 1, $order = "id desc") {        $where = " WHERE 1 ";        if ($data['mid']) {            $where .= " AND mid=" . $data['mid'];        }        if ($data['where']) {            $where .= $data['where'];        }        $sql = "SELECT * from ###_withdraw_commission {$where} ORDER BY {$order}";        if ($limit == "all") {            $list = $this->db->select($sql);        } else {            $this->load->model('page');            $_GET['page'] = $page;            if (intval($limit) > 0) {                $this->page->set_vars(array('per' => intval($limit)));            }            $list = $this->page->hashQuery($sql)->result_array();        }        return $list;    }    #我的粉丝    function getMyivtList($data = array(), $limit = '', $page = 1, $order = "mid desc") {        $where = " WHERE 1 and status=1 ";        if ($data['mid']) {            $where .= " AND mid=" . $data['mid'];        }        if ($data['where']) {            $where .= $data['where'];        }        $sql = "SELECT * FROM ###_member {$where} ORDER BY {$order}";        if ($limit == "all") {            $list = $this->db->select($sql);        } else {            $this->load->model('page');            $_GET['page'] = $page;            if (intval($limit) > 0) {                $this->page->set_vars(array('per' => intval($limit)));            }            $list = $this->page->hashQuery($sql)->result_array();            $list = $this->db->lJoin($list,'member_detail',"mid,nickname,photo,c_time","mid","mid");        }        return $list;    }}