<?php/** * Class payment_model */class payment_model extends Lowxp_Model {	public $baseTable = '###_payment';	function __construct() {}	//保存数据	function save() {		$post = $_POST['post'];		$id   = intval($_POST['id']);		#表单处理		if (empty($post['pay_name'])) {return array('code' => 10001, 'message' => '请输入支付方式名称!');}		$sql = "SELECT COUNT(*) FROM " . $this->baseTable . " WHERE pay_name='" . $post['pay_name'] . "' AND pay_code<>'" . $post['pay_code'] . "'";		if ($this->db->getstr($sql)) {return array('code' => 10001, 'message' => '支付方式名称已经存在!');}		#初始值 格式化		$msg             = '';		$post['pay_fee'] = empty($post['pay_fee']) ? 0 : trim($post['pay_fee']);		#取得支付配置信息		$post['pay_config'] = array();		if (isset($_POST['cfg_value']) && is_array($_POST['cfg_value'])) {			for ($i = 0; $i < count($_POST['cfg_name']); $i++) {				if (trim($_POST['cfg_type'][$i]) == 'file') {					$key    = trim($_POST['cfg_name'][$i]);					$cacert = $this->upfile_cacert($key, $post['pay_code']);					if ($cacert != false) {						$_POST['cfg_value'][$i] = $cacert;					}				}				$post['pay_config'][] = array(					'name'  => trim($_POST['cfg_name'][$i]),					'type'  => trim($_POST['cfg_type'][$i]),					'value' => trim($_POST['cfg_value'][$i]),				);			}		}		$post['pay_config'] = serialize($post['pay_config']);		if ($id) {			#编辑			$msg = '更新成功';		} else {			#安装			$msg = '安装成功';			#数据库已经存在，获取id			$sql             = "SELECT pay_id FROM " . $this->baseTable . " WHERE pay_code='" . $post['pay_code'] . "'";			$id              = $this->db->getstr($sql);			$post['enabled'] = 1;		}		#处理图片数据		if (isset($post['thumb']) && !empty($post['thumb'])) {			$arrData = array();			foreach ($post['thumb']['path'] as $k => $v) {				$arrData[$k]['path']  = $v;				$arrData[$k]['title'] = $post['thumb']['title'][$k];			}			$post['thumb'] = json_encode($arrData);		}		#保存		$where = $id ? array('pay_id' => $id) : '';		$res   = $this->db->save($this->baseTable, $post, '', $where);		if ($res === false) {return array('code' => 10002, 'message' => '数据操作失败!');}		if ($id) {			admin_log('编辑支付方式：' . $post['pay_name']);			return array('code' => 0, 'type' => 'update', 'message' => $msg);		} else {			admin_log('安装支付方式：' . $post['pay_name']);			return array('code' => 0, 'type' => 'insert', 'message' => $msg);		}	}	//支付列表	function getPayment($where) {		$payment = $this->db->select("SELECT * FROM " . $this->baseTable . " WHERE pay_id <> 0  AND $where ORDER BY pay_id asc");		return $payment;	}	//支付信息	function payment_info($pay_id) {		$info = $this->db->get("SELECT * FROM " . $this->baseTable . " WHERE pay_id = '$pay_id'");		return $info;	}	//保存支付日志	function pay_log_save($input) {		if (!empty($input['log_id'])) {			$log_id = $input['log_id'];			unset($input['log_id']);			$r = $this->db->update('###_pay_log', $input, array('log_id' => $log_id));		} else {						$r = $this->db->insert('pay_log', $input);		}		return $r;	}	//支付日志信息	function pay_log($log_id) {		$info = $this->db->get("SELECT * FROM ###_pay_log WHERE log_id = '$log_id'");		return $info;	}	//支付手续费	function pay_fee($pay_id, $order_amount, $cod_fee = 0) {		$pay_fee = 0;		$payment = $this->payment_info($pay_id);		$rate    = ($payment['is_cod'] && !is_null($cod_fee)) ? $cod_fee : $payment['pay_fee'];		if (strpos($rate, '%') !== false) {			/* 支付费用是一个比例 */			$val     = floatval($rate) / 100;			$pay_fee = $val > 0 ? $order_amount * $val / (1 - $val) : 0;		} else {			$pay_fee = floatval($rate);		}		return price_format($pay_fee);	}	function upfile_cacert($key, $payment) {		if (!isset($_FILES[$key])) {			return false;		}		$F        = $_FILES[$key];		$filename = $F['name'];		$tmp_name = $F['tmp_name'];		if (!is_uploaded_file($tmp_name)) {			return false;		}		$savePath = RUNTIME_PATH .'cacert/'. $payment . '/';		is_dir($savePath) || mkdir($savePath, 0777, true);		if (move_uploaded_file($tmp_name, $savePath . $filename)) {			return $savePath . $filename;		} else {			return false;		}	}}